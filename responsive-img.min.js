"use strict";angular.module("brc.angular-responsive-img",[]).directive("picture",["$window",function($window){return{restrict:"EA",compile:function(tElement,tAttrs){var newtElement=angular.element("<img>"),sources=tElement.find("source"),rules={},_src_processed=!1;tAttrs.width&&newtElement.attr("width",tAttrs.width),tAttrs.height&&newtElement.attr("height",tAttrs.height);var processSources=function(){angular.forEach(sources,function(source){processSource(source,rules)}),_src_processed=!0},processSource=function(source){if(!source.getAttribute("src"))return!1;var dpi=source.getAttribute("dpi")||"1";if(rules[dpi]||(rules[dpi]={"default":"",sizes:[]}),source.getAttribute("size")){var new_rule={src:source.getAttribute("src")},restrictions=source.getAttribute("size").split(",");angular.forEach(restrictions,function(restriction){var res=restriction.split(":");new_rule[res[0].trim()]=parseInt(res[1],10)}),rules[dpi].sizes.push(new_rule)}else rules[dpi].default=source.getAttribute("src");return!0},selectSource=function(element){var src,dpi=String($window.devicePixelRatio),width=$window.innerWidth,height=$window.innerHeight,dpi_rules=rules[dpi]||rules[1];angular.forEach(dpi_rules.sizes,function(rule){if(!src){var minw=rule["min-width"],maxw=rule["max-width"],minh=rule["min-height"],maxh=rule["max-height"];angular.isNumber(minw)&&minw>width||angular.isNumber(maxw)&&width>maxw||angular.isNumber(minh)&&minh>height||angular.isNumber(maxh)&&height>maxh||(src=rule.src)}}),src||(src=rules[1]["default"]),element.attr("src",src)};return processSources(),selectSource(newtElement),tElement.replaceWith(newtElement),function(scope,iElem){var resizeCb=function(){selectSource(iElem)};angular.element($window).on("resize",resizeCb),scope.$on("$destroy",function(){angular.element($window).off("resize",resizeCb)})}}}}]);